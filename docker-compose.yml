version: "3"

# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/

# Disable systemd-resolved since it uses port 53
# More info: https://askubuntu.com/questions/191226/dnsmasq-failed-to-create-listening-socket-for-port-53-address-already-in-use

services:

  traefik:
    image: "traefik:v2.0.0"
    command:
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --api.insecure
    ports:
      - "80:80"
      # - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`pi.traefik`)"
      - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"
    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole:v5.3.4
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      # - "80:80/tcp"
      - "443:443/tcp"
    environment:
      TZ: 'Asia/Manila'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    labels:
      - "traefik.enable=true"

      # web interface
      - "traefik.http.routers.pihole.rule=Host(`pi.hole`)"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
      # - "traefik.http.routers.pihole.entrypoints=websecure"
      # - "traefik.http.routers.pihole.tls.certresolver=mytlschallenge"

    volumes:
      - './etc-pihole/:/etc/pihole/'
      - './etc-dnsmasq.d/:/etc/dnsmasq.d/'
    dns:
      - 127.0.0.1
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    #cap_add:
    #  - NET_ADMIN
    restart: unless-stopped

  code-server:
    image: "codercom/code-server:latest"
    container_name: code-server
    volumes:
      - '/home/ubuntu/.vscode-config:/home/coder/.config'
      - '/home/ubuntu/vscode-files:/home/coder/project'
    user: "1000:1000"
    dns:
      - 8.8.8.8
    environment:
      DOCKER_USER: ubuntu
    labels:
      - "traefik.enable=true"
      # web interface
      - "traefik.http.routers.code-server.rule=Host(`vonatzki.code`)"
      - "traefik.http.services.code-server.loadbalancer.server.port=8080"
    restart: unless-stopped

  # docker run -d
  # --name='Shinobi'
  # -p '8080:8080/tcp'
  # -v "/dev/shm/Shinobi/streams":'/dev/shm/streams':'rw'
  # -v "$HOME/Shinobi/config":'/config':'rw'
  # -v "$HOME/Shinobi/customAutoLoad":'/home/Shinobi/libs/customAutoLoad':'rw'
  # -v "$HOME/Shinobi/database":'/var/lib/mysql':'rw'
  # -v "$HOME/Shinobi/videos":'/home/Shinobi/videos':'rw'
  # -v "$HOME/Shinobi/plugins":'/home/Shinobi/plugins':'rw'
  # -v '/etc/localtime':'/etc/localtime':'ro'
  # shinobisystems/shinobi:dev
  shinobi:
    image: "shinobi-image:1.0"
    container_name: shinobi
    volumes:
      - '/dev/shm/Shinobi/streams:/dev/shm/streams:rw'
      - '/home/ubuntu/Shinobi/config:/config:rw'
      - '/home/ubuntu/Shinobi/customAutoload:/home/Shinobi/libs/customAutoLoad:rw'
      - '/home/ubuntu/Shinobi/database:/var/lib/mysql:rw'
      - '/home/ubuntu/Shinobi/videos:/home/Shinobi/videos:rw'
      - '/home/ubuntu/Shinobi/plugins:/home/Shinobi/plugins:rw'
    dns:
      - 8.8.8.8      
    labels:
      - "traefik.enable=true"
      # web interface
      - "traefik.http.routers.zurra-cctv.rule=Host(`cctv.zurra.trading`)"
      - "traefik.http.services.zurra-cctv.loadbalancer.server.port=8080"
  
